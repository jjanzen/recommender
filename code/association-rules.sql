/*
Song Recommendation Association Rules
Written by Jason Baker
SEIS 734-01 Spring 2015
Note: Million Song Taste Subset data must be loaded into SONG.TASTESET
before running this script.
*/

/* LOAD Taste Subset data (uncomment)
set schema song;
DROP TABLE TASTESET;
CREATE COLUMN TABLE "TASTESET"(UID varchar(50), SONGID varchar(20), PLAYCOUNT int);
IMPORT FROM '/home/ec2-user/taste.ctl';

*/

set schema song;

/* CREATE TABLE TYPE FOR THE INPUT DATA */
DROP TYPE PAL_DATA_T;
CREATE TYPE PAL_DATA_T AS TABLE (
    "UID" VARCHAR(50),
    "SONGID" VARCHAR(50)
);

/* CREATE TABLE TYPE FOR THE OUTPUT TABLE */
DROP TYPE PAL_RESULT_T;
CREATE TYPE PAL_RESULT_T AS TABLE (
    "PRERULE" VARCHAR(500),
    "POSTRULE" VARCHAR(500),
    "SUPPORT" DOUBLE,
    "CONFIDENCE" DOUBLE,
    "LIFT" DOUBLE
);

/* CREATE TABLE TYPE FOR THE OUTPUT PMML MODEL */
DROP TYPE PAL_PMMLMODEL_T;
CREATE TYPE PAL_PMMLMODEL_T AS TABLE(
"ID" INTEGER,
"PMMLMODEL" VARCHAR(5000)
);

DROP TYPE PAL_CONTROL_T;
CREATE TYPE PAL_CONTROL_T AS TABLE (
  "NAME" VARCHAR(50),
  "INTARGS" INTEGER,
  "DOUBLEARGS" DOUBLE,
  "STRINGARGS" VARCHAR(100)
);

/* CREATE SIGNATURE TABLE THAT POINTS TO THE OTHER TABLE TYPES */
DROP TABLE PDATA;
CREATE COLUMN TABLE PDATA(
  "POSITION" INTEGER,
  "SCHEMA_NAME" VARCHAR(100),
  "TYPE_NAME" VARCHAR(100),
  "PARAMETER_TYPE" VARCHAR(100) );
INSERT INTO PDATA VALUES (1, 'SONG', 'PAL_DATA_T', 'IN');
INSERT INTO PDATA VALUES (2, 'SONG', 'PAL_CONTROL_T', 'IN');
INSERT INTO PDATA VALUES (3, 'SONG', 'PAL_RESULT_T', 'OUT');
INSERT INTO PDATA VALUES (4, 'SONG', 'PAL_PMMLMODEL_T', 'OUT');

/* GENERATE THE APRIORI PROCEDURE */
CALL "SYS".AFLLANG_WRAPPER_PROCEDURE_DROP('SONG','PAL_APRIORI_RULE_PROC');
CALL "SYS".AFLLANG_WRAPPER_PROCEDURE_CREATE('AFLPAL','APRIORIRULE','SONG','PAL_APRIORI_RULE_PROC',PDATA);

-- APPLICATION SETUP

DROP VIEW V_DATA_TBL;
CREATE VIEW V_DATA_TBL AS
select UID, SONGID from trainingset;

/* CREATE TABLE THAT WILL CONTAIN THE INPUT PARAMETERS */
DROP TABLE #PAL_CONTROL_TBL;
CREATE LOCAL TEMPORARY COLUMN TABLE #PAL_CONTROL_TBL(
  "NAME" VARCHAR(100),
  "INTARGS" INTEGER,
  "DOUBLEARGS" DOUBLE,
  "STRINGARGS" VARCHAR (100)
);
/* SET THRESHOLDS */
INSERT INTO #PAL_CONTROL_TBL VALUES ('THREAD_NUMBER', 8, null, null);
INSERT INTO #PAL_CONTROL_TBL VALUES ('MIN_SUPPORT', null, 0.00001, null);
INSERT INTO #PAL_CONTROL_TBL VALUES ('MIN_CONFIDENCE', null, 0.20, null);
INSERT INTO #PAL_CONTROL_TBL VALUES ('MAXITEMLENGTH', 2, null, null);
INSERT INTO #PAL_CONTROL_TBL VALUES ('PMML_EXPORT', 0, null, null);

/* CREATE THE OUTPUT TABLE */
DROP TABLE PAL_RESULT_TBL2;
CREATE COLUMN TABLE PAL_RESULT_TBL2 LIKE PAL_RESULT_T;

/* CREATE THE OUTPUT TABLE WITH THE PMML MODEL */
DROP TABLE PAL_PMMLMODEL_TBL;
CREATE COLUMN TABLE PAL_PMMLMODEL_TBL LIKE PAL_PMMLMODEL_T;

/* CALL THE APRIORI ALGORITHM */
CALL "SONG".PAL_APRIORI_RULE_PROC(V_DATA_TBL, #PAL_CONTROL_TBL, PAL_RESULT_TBL2, PAL_PMMLMODEL_TBL) WITH OVERVIEW;

/* COMBINE THE PRERULE AND POSTRULE VALUES INTO ONE RULE FIELD FOR DISPLAY */
DROP VIEW COMBINE_RESULTS;
CREATE VIEW COMBINE_RESULTS AS
	SELECT "PRERULE" || ' => ' || "POSTRULE" AS RULE, SUPPORT, CONFIDENCE, LIFT FROM PAL_RESULT_TBL2;

/*
export pal_result_tbl2 as csv into '/home/ec2-user/export/';
*/
